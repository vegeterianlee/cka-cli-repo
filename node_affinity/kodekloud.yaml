# 특정 노드의 label 확인
kubectl get node node01 -o json | jq ".metadata.labels"

# 특정 노드에 label 추가
kubectl label node node01 color=blue

# deployment template 파일 생성
kubectl create deployment blue --image=nginx --replicas=3 --dry-run=client -o yaml > blue.yaml

# node selector 추가
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blue
spec:
  replicas: 3
  selector:
    matchLabels:
      app: blue
  template:
    metadata:
      labels:
        app: blue
    spec:
      containers:
      - name: nginx
        image: nginx
      nodeSelector:
        app: blue

# operator
  IN, NotIn, Exists, DoesNotExist

# nodeAffinity
  requiredDuringSchedulingIgnoredDuringExecution
  preferredDuringSchedulingIgnoredDuringExecution
  requiredDuringSchedulingRequiredDuringExecution

# apply 오류가 발생했을 때 찾는 방법
kubectl diff -f blue.yaml

# vim 한번에 들여쓰기
shift + v + >

# affinity 적용
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: disktype
          operator: In
          values:
          - ssd
          - nvme
        - key: zone
          operator: NotIn
          values:
          - us-west-1a
        - key: highavailability
          operator: Exists
        - key: deprecated
          operator: DoesNotExist